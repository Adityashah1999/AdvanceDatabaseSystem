create or replace procedure PROC_GOOD_DATAS
As 
Begin
  FOR source IN (SELECT * FROM STAGING_COMPLAINT where DESCRIPTION is NOT null and COMPENSATION_TYPE is NOT null and COMPLAINT_TYPE is NOT null and MONTH is not null and YEAR is not Null and day is not null) LOOP
   INSERT INTO GOOD_COMPLAINT(GOOD_COMPLAINT_ID,COMPLAINT_ID, COMPLAINT_TYPE,DESCRIPTION,COMPLAINT_STATUS,COMPENSATION_AMNT,compensation_type,FK1_CUSTOMER_ID, STATUS, YEAR, MONTH, day) 
   VALUES(GOOD_COMPLAINT_SEQ1.nextval,source.COMPLAINT_ID,source.COMPLAINT_TYPE,source.DESCRIPTION, source.COMPLAINT_STATUS, source.COMPENSATION_AMNT,source.COMPENSATION_TYPE,source.FK1_CUSTOMER_ID, 'NO ISSUE',source.YEAR,source.MONTH,source.day);
END LOOP;
FOR source IN (SELECT * FROM STAGING_CUSTOMER where CUSTOMER_TYPE is NOT null) LOOP
   INSERT INTO GOOD_CUSTOMER(GOOD_CUST_ID,CUSTOMER_ID,CUSTOMER_ZIP_CODE,CUSTOMER_TYPE, BUSINESS,STATUS) 
   VALUES(GOOD_CUSTOMER_SEQ1.nextval,source.CUSTOMER_ID,source.CUSTOMER_ZIP_CODE, source.CUSTOMER_TYPE, source.BUSINESS,'NO ISSUE');
   END LOOP;
   FOR source IN (SELECT * FROM STAGING_FLIGHTS where TAIL_NUMBER is NOT null and ARRIVAL_DELAY IS NOT NULL and DEPARTURE_DELAY IS NOT NULL ) LOOP
   INSERT INTO GOOD_FLIGHTS(GOOD_FLIGHT_ID,FLIGHT_ID,YEAR,MONTH,DAY,TAIL_NUMBER,FLIGHT_NUMBER,ORIGIN_AIRPORT,ARRIVAL_DELAY,DESTINATION_AIRPORT,DEPARTURE_DELAY,CANCELLED,cancelled_reason,Data_SOURCE) 
   VALUES(GOOD_FLIGHT_SEQ1.nextval,source.FLIGHT_ID, source.YEAR,source.MONTH,source.DAY, source.TAIL_NUMBER,source.FLIGHT_NUMBER,source.ORIGIN_AIRPORT,source.ARRIVAL_DELAY,source.DESTINATION_AIRPORT,source.DEPARTURE_DELAY,source.CANCELLED,source.CANCELLED_REASON,source.DATA_SOURCE);
END LOOP;
END;
